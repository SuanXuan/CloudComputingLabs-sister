#!/bin/bash

set_result=""
ERROR_RETRY_TIMES=2
standard_error=".ERROR\r\n"
function send_set_command
{
	key_len=$1
	key=$2
	value_len=$3
	value=$4
	printf -v set_command "*3\r\n\$3\r\nSET\r\n\$${key_len}\r\n$2\r\n\$${value_len}\r\n${value}\r\n"
	for (( i=0; i<$ERROR_RETRY_TIMES; i++ ))
	do
		retval_set=`printf "$set_command" | nc 127.0.0.1 8001`
		if [[ $retval_set =~ $standard_error ]]
		then
			echo "false"
			continue
		else
			break
		fi
	done
	echo $retval_set
}
get_result=""
function send_get_command
{
	key_len=$1
	key=$2
	printf -v get_command "*2\r\n\$3\r\nGET\r\n\$${key_len}\r\n${key}\r\n"
	for (( i=0; i<$ERROR_RETRY_TIMES; i++ ))
	do
		retval_get=`printf "$get_command" | nc -w 3 127.0.0.1 8001`
		if [[ $retval_get =~ $standard_error ]]
		then
			echo "false"
			continue
		else
			break
		fi
	done
	printf -v get_result "$retval_get"
	echo $get_result
		
}
function send_del_command
{
	key_len=$1
	key=$2
	printf -v del_command "*2\r\n$3\r\nDEL\r\n\$${key_len}\r\n${key}\r\n"
	for (( i=0; i<$ERROR_RETRY_TIMES; i++ ))
	do
		retval_del=`printf "$del_command" | nc -w 3 127.0.0.1 8001`
		if [[ $retval_del =~ $standard_error ]]
		then
			echo "false"
			continue
		else
			break
		fi
	done
	printf -v del_result "$retval_del"
	echo $del_result
}
echo "------TEST SET------"
send_set_command 9 item2_key 11 item2_value
echo "------TEST GET------"
send_get_command 9 item2_key
echo "------TEST DEL------"
send_del_command 9 item2_key
echo "------TEST GET------"
send_get_command 9 item2_key
